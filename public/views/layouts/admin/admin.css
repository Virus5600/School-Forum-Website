:root{--navbar-height:56px}.sidebar-toggler{background-color:transparent;border:1px solid transparent;border-radius:.25rem;color:var(--bs-body-color);font-size:1.25rem;line-height:1;padding:.25rem .75rem}.sidebar-toggler:focus,.sidebar-toggler:hover{text-decoration:none}.header{position:sticky;top:0;z-index:500}.dropdown .dropdown-item:hover{background-color:var(--bs-it-secondary);color:var(--bs-light);transition:.25s}.content,.sidebar{max-width:100vw;overflow-x:hidden;transition:width .5s cubic-bezier(.25,.45,.45,1)}.sidebar{display:flex;flex:1 1 auto;flex-direction:column;height:100%;max-height:calc(100vh - var(--navbar-height));min-height:calc(100vh - var(--navbar-height));overflow-y:auto;position:fixed;white-space:nowrap;width:0;z-index:475}.sidebar>.sidebar-content{flex:1 1 auto;height:100%;width:100%}.sidebar>.sidebar-content>a,.sidebar>.sidebar-content>span{color:var(--bs-body-color);padding:.5rem 1rem;transition:.25s}.sidebar>.sidebar-content>a:hover,.sidebar>.sidebar-content>span:hover{background-color:var(--bs-it-secondary)}.sidebar>.sidebar-content>a:hover:not(span),.sidebar>.sidebar-content>span:hover:not(span){background-color:var(--bs-it-secondary)!important;color:var(--bs-light)}.sidebar.show{width:100%}.sidebar~.content{width:auto}@media (min-width:992px){.sidebar-toggler{display:none}.sidebar{--navbar-height:68px;max-height:calc(100vh - var(--navbar-height));max-width:15rem;min-height:calc(100vh - var(--navbar-height));min-width:15rem;overflow-y:auto;position:sticky;top:var(--navbar-height);width:15rem!important;z-index:500}.sidebar~.content{max-width:calc(100vw - 15rem)}.sidebar>*>a,.sidebar>*>span{padding:.5rem 1rem}.sidebar>*>a:hover{background-color:#eaeaea}}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/