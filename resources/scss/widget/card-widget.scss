@import "./../bs-modifiers/base";

*:not(hr) {
	// ADDS THE NECESSARY SPACING FOR THE FLOATING HEADER
	&:has(+ .card.floating-header:not(.no-buffer, .no-header-buffer, .no-outer-buffer)) {
		&:after {
			content: "";
			position: relative;
			display: block;
			padding-bottom: 1.5rem;
		}
	}

	&:has(> .card.floating-header:first-child:not(.no-buffer, .no-header-buffer, .no-outer-buffer)) {
		&:before {
			content: "";
			position: relative;
			display: block;
			padding-top: 1.5rem;
		}
	}

	// ADDS THE NECESSARY SPACING FOR THE FLOATING FOOTER
	&.card.floating-footer:not(.no-buffer, .no-footer-buffer, .no-outer-buffer) {
		& + * {
			&:before {
				content: "";
				position: relative;
				display: block;
				padding-top: 1.5rem;
			}
		}
	}

	&:has(> .card.floating-footer:not(.no-buffer, .no-footer-buffer, .no-outer-buffer)) {
		&:after {
			content: "";
			position: relative;
			display: block;
			padding-bottom: 1.5rem;
		}
	}
}
// <hr> HANDLER
hr:has(+ .card.floating-header:not(.no-buffer, .no-header-buffer)) {
	padding-bottom: 1.5rem;
}

.card.floating-footer:not(.no-buffer, .no-footer-buffer) + hr {
	padding-top: 1.5rem;
}

// CARD WIDGET
.card {
	// Floating Header
	&.floating-header {
		position: relative;

		& > .card-header {
			position: absolute;
			transform: translate(1rem, -50%);
			transition: .5s ease;

			background: color-mix(in srgb, var(--bs-card-bg) 100%, var(--bs-card-cap-bg) 50%);
			text-overflow: ellipsis;
			white-space: nowrap;
			max-width: 90%;
			overflow: hidden;

			img:not(.cw-unaffected) {
				height: 1em;
			}

			@each $breakpoint in map-keys($grid-breakpoints) {
				@include media-breakpoint-up($breakpoint) {
					$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

					&.header#{$infix}-start {
						left: 0;
						right: auto;
						transform: translate(1rem, -50%);
					}

					&.header#{$infix}-center {
						left: 50%;
						right: auto;
						transform: translate(-50%, -50%);
					}

					&.header#{$infix}-end {
						left: auto;
						right: 0;
						transform: translate(-1rem, -50%);
					}
				}
			}
		}

		&:not(.no-buffer, .no-header-buffer, .no-inner-buffer) > .card-body {
			&:before {
				content: "";
				position: relative;
				display: block;
				padding: 1rem;
			}
		}
	}

	// Floating Footer
	&.floating-footer {
		position: relative;

		& > .card-footer {
			position: absolute;
			transform: translate(1rem, 50%);
			transition: .5s ease;
			bottom: 0;

			background: color-mix(in srgb, var(--bs-card-bg) 100%, var(--bs-card-cap-bg) 50%);
			text-overflow: ellipsis;
			white-space: nowrap;
			max-width: 90%;
			overflow: hidden;

			img {
				height: 1em;
			}

			@each $breakpoint in map-keys($grid-breakpoints) {
				@include media-breakpoint-up($breakpoint) {
					$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

					&.footer#{$infix}-start {
						left: 0;
						right: auto;
						transform: translate(1rem, 50%);
					}

					&.footer#{$infix}-center {
						left: 50%;
						right: auto;
						transform: translate(-50%, 50%);
					}

					&.footer#{$infix}-end {
						left: auto;
						right: 0;
						transform: translate(-1rem, 50%);
					}
				}
			}
		}

		&:not(.no-buffer, .no-footer-buffer, .no-inner-buffer) > .card-body {
			&:after {
				content: "";
				position: relative;
				display: block;
				padding: 1rem;
			}
		}
	}

	// Card Image Overlay
	&:has(> .card-img-overlay) {
		--bs-card-height: 10rem;
		overflow: hidden;

		& > .card-img {
			pointer-events: none;
			height: var(--bs-card-height);
			object-fit: cover;
		}

		& > .card-img-overlay {
			&.has-backdrop-blur {
				transition: backdrop-filter .25s ease;

				&:hover,
				&:focus,
				&.active {
					backdrop-filter: blur(4px);
				}
			}
		}
	}

	// Hoverable Cards
	&.hoverable {
		--bs-hoverable-shadow-color: var(--bs-it-primary);
		transition: .5s ease;

		&:hover,
		&:focus {
			transform: scale(1.025);
			box-shadow: 0 0 10px 2.5px var(--bs-hoverable-shadow-color);
		}
	}

	// Clickable Cards
	&.clickable {
		user-select: none;
		cursor: pointer;
		@extend .hoverable;

		&:active {
			transition: 0s ease;
			transform: scale(1.0125);
		}
	}
}

// RESPONSIVE CARD WIDGET
@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		.card {
			// Floating Header
			&.floating#{$infix}-header {
				position: relative;

				& > .card-header {
					position: absolute;
					transform: translate(1rem, -50%);
					transition: .5s ease;

					background: color-mix(in srgb, var(--bs-card-bg) 100%, var(--bs-card-cap-bg) 50%);
					text-overflow: ellipsis;
					white-space: nowrap;
					max-width: 90%;
					overflow: hidden;

					img:not(.cw-unaffected) {
						height: 1em;
					}

					@each $breakpoint in map-keys($grid-breakpoints) {
						@include media-breakpoint-up($breakpoint) {
							$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

							&.header#{$infix}-start {
								left: 0;
								transform: translate(1rem, -50%);
							}

							&.header#{$infix}-center {
								left: 50%;
								transform: translate(-50%, -50%);
							}

							&.header#{$infix}-end {
								right: 0;
								transform: translate(-1rem, -50%);
							}
						}
					}
				}

				&:not(.no-buffer, .no-header-buffer, .no-inner-buffer) > .card-body {
					&:before {
						content: "";
						position: relative;
						display: block;
						padding: 1rem;
					}
				}
			}

			// Floating Footer
			&.floating#{$infix}-footer {
				position: relative;

				& > .card-footer {
					position: absolute;
					transform: translate(1rem, 50%);
					transition: .5s ease;
					bottom: 0;

					background: color-mix(in srgb, var(--bs-card-bg) 100%, var(--bs-card-cap-bg) 50%);
					text-overflow: ellipsis;
					white-space: nowrap;
					max-width: 90%;
					overflow: hidden;

					img {
						height: 1em;
					}

					@each $breakpoint in map-keys($grid-breakpoints) {
						@include media-breakpoint-up($breakpoint) {
							$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

							&.footer#{$infix}-start {
								left: 0;
								transform: translate(1rem, 50%);
							}

							&.footer#{$infix}-center {
								left: 50%;
								transform: translate(-50%, 50%);
							}

							&.footer#{$infix}-end {
								right: 0;
								transform: translate(-1rem, 50%);
							}
						}
					}
				}

				&:not(.no-buffer, .no-footer-buffer, .no-inner-buffer) > .card-body {
					&:after {
						content: "";
						position: relative;
						display: block;
						padding: 1rem;
					}
				}
			}
		}
	}
}
